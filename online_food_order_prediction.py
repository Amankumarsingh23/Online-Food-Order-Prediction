# -*- coding: utf-8 -*-
"""Online Food Order Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fj9w5VsjuuOJbTHwQxPEV9FWCGLYLKg3
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split

import  plotly.express as px
import plotly.graph_objects as go
import matplotlib.pyplot as plt

data=pd.read_csv("/content/Age,Gender,Marital Status,Occupation.csv")

data.head()

data.isnull().sum()

px.histogram(data,x="Age",color="Gender")

import seaborn as sns

plt.figure(figsize=(15,10))
plt.title("Order vs age ")
sns.histplot(x="Age", hue="Output", data=data,kde=True)
plt.show()

plt.figure(figsize=(15,10))
plt.title("Order vs Family size")
sns.histplot(x="Family size",hue="Output",kde=True,data=data)
plt.show()

fig=px.histogram(data,x="Family size",color="Output")
fig.show()

buying_again_data = data.query("Output == 'Yes'")
buying_again_data.head()

fig=px.pie(buying_again_data,names="Gender",hole=0,title="Who Orders Food Online More: Male Vs. Female")
fig.show()

fig=px.pie(buying_again_data,names="Marital Status",hole=0.1,title="who order more married or unmarried")
fig.show()

fig=px.pie(buying_again_data,names="Occupation",hole=0.1,title="who order more student or working")
fig.show()

fig=px.pie(buying_again_data,names="Monthly Income",hole=0.2,title="which income slab order more ")
fig.show()

#converting all categorical figure into numerical ones
data["Gender"]=data["Gender"].map({"Male":1,"Female":0})
data["Marital Status"]=data["Marital Status"].map({"Single":2,"Married":1,"Prefer not to say":0})
data["Occupation"]=data["Occupation"].map({"Student": 1,"Employee": 2,"Self Employeed": 3, "House wife": 4})
data["Monthly Income"] = data["Monthly Income"].map({"No Income": 0,
                                                     "25001 to 50000": 5000,
                                                     "More than 50000": 7000,
                                                     "10001 to 25000": 25000,
                                                     "Below Rs.10000": 10000})
data["Output"]=data["Output"].map({"Yes":1,"No":0})

data["Educational Qualifications"] = data["Educational Qualifications"].map({"Graduate": 1,
                                                                             "Post Graduate": 2,
                                                                             "Ph.D": 3, "School": 4,
                                                                             "Uneducated": 5})
data["Monthly Income"] = data["Monthly Income"].map({"No Income": 0,
                                                     "25001 to 50000": 5000,
                                                     "More than 50000": 7000,
                                                     "10001 to 25000": 25000,
                                                     "Below Rs.10000": 10000})
data["Feedback"] = data["Feedback"].map({"Positive": 1, "Negative ": 0})
print(data.head())

x = np.array(data[["Age", "Gender", "Marital Status", "Occupation", "Monthly Income", "Educational Qualifications","Family size", "Pin code", "Feedback"]])
y = np.array(data[["Output"]])

from sklearn.ensemble import RandomForestClassifier
xtrain, xtest, ytrain, ytest = train_test_split(x, y,
                                                test_size=0.10,
                                                random_state=43
                                                )
model = RandomForestClassifier()

model.fit(xtrain, ytrain)
print(model.score(xtest, ytest))

print("Enter Customer Details to Predict If the Customer Will Order Again")
a = int(input("Enter the Age of the Customer: "))
b = int(input("Enter the Gender of the Customer (1 = Male, 0 = Female): "))
c = int(input("Marital Status of the Customer (1 = Single, 2 = Married, 3 = Not Revealed): "))
d = int(input("Occupation of the Customer (Student = 1, Employee = 2, Self Employeed = 3, House wife = 4): "))
e = int(input("Monthly Income: "))
f = int(input("Educational Qualification (Graduate = 1, Post Graduate = 2, Ph.D = 3, School = 4, Uneducated = 5): "))
g = int(input("Family Size: "))
h = int(input("Pin Code: "))
i = int(input("Review of the Last Order (1 = Positive, 0 = Negative): "))
features = np.array([[a, b, c, d, e, f, g, h, i]])
print("Finding if the customer will order again: ", model.predict(features))

